openapi: 3.0.1
info:
  title: Shopper API.
  description: Complete documentation for the Shopper API.
  version: 1.0.0
servers:
  - url: http://api.shopper.ink/v1
paths:
  /auth: # Login
    post:
      deprecated: true
      summary: Authenticate with a username and password to recieve a bearer token
      tags:
        - Authenticate
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: john
                password:
                  type: string
                  example: ThisIsMySuperSecurePassword123
              required:
                - username
                - password
      responses:
        '200':
          description: User authenticated. A JSON object containging a username and a bearer token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: john
                  bearer:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                required:
                  - username
                  - bearer
        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'
  /user: # Create user, Delete user, Update user
    post:
      deprecated: true
      summary: Create a new user
      tags:
        - User
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: john
                password:
                  type: string
                  example: ThisIsMySuperSecurePassword123
                password_repeat:
                  type: string
                  example: ThisIsMySuperSecurePassword123
              required:
                - username
                - password
                - password_repeat
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
    delete:
      deprecated: true
      summary: Delete user
      tags:
        - User
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /profile:
    patch:
      deprecated: true
      summary: Update user info
      tags:
        - Profile
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: john
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /profile/password: # Update users password
    patch:
      deprecated: true
      summary: Update password
      tags:
        - Profile
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  old_password:
                    type: string
                    example: ThisIsMySuperSecurePassword123
                  new_password:
                    type: string
                    example: NewSecurePassword1
                  password_repeat:
                    type: string
                    example: NewSecurePassword1
                required:
                  - old_password
                  - new_password
                  - password_repeat
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /shoppinglist: # Get shopping list
    get:
      deprecated: true
      summary: Get all items in the shopping list
      tags:
        - Shopping list
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingListArticle'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /bcds: # Add / Edit / Delete article
    post:
      deprecated: true
      summary: Add article to the barcode database
      tags:
        - Barcode Data Store
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  barcode:
                    type: string
                    example: 7310070001764
                  display_name:
                    type: string
                    example: Raml√∂sa Smultron 50cl
                  manufacturer:
                    type: string
                    example: Carlsberg Sweden
                required:
                  - barcode
                  - display_name
                  - manufacturer
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
  /bcds/{barcode}:
    get:
      deprecated: true
      summary: Get info about a specific article
      tags:
        - Barcode Data Store
      responses:
        '200':
          description: Article object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingListArticle'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
        - name: barcode
          in: path
          description: Barcode string
          required: true
          schema:
            type: string
components:
  responses:
    Ok: # 200
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    Created: # 201
      description: Resource created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    BadRequest: # 400
      description: Malformed request syntax
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    Unauthorized: # 401
      description: Valid request but credentials are incorrect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    NotFound: # 404
      description: Resourse not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    Conflict: # 409
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    SeverError: # 5XX
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
  schemas:
    ShoppingListArticle:
      type: object
      properties:
        barcode:
          type: string
        display_name:
          type: string
        manufacturer:
          type: string
        amount:
          type: number
      required:
        - barcode
        - display_name
        - manufacturer
        - amount
    GenericResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - Bearer: []
